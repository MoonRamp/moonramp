name: Release CI
on:
  push:
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
env:
  CARGO_TERM_COLOR: "always"
jobs:
  docker-release:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: Build Moonramp Docker Image
      run: |
        docker build . --tag moonramp/moonramp:${GITHUB_RUN_ID}
    - name: Tag Moonramp Docker Image
      run: |
        docker tag moonramp/moonramp:${GITHUB_RUN_ID} moonramp/moonramp:$GITHUB_SHA
        docker tag moonramp/moonramp:${GITHUB_RUN_ID} moonramp/moonramp:$GITHUB_REF_NAME
    - name: Push Moonramp Docker Image
      run: |
        docker login -u moonramp -p $DOCKER_HUB_ACCESS_TOKEN
        docker push moonramp/moonramp:$GITHUB_SHA
        docker push moonramp/moonramp:$GITHUB_REF_NAME
  github-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.18.0'
    - name: Install Wasm Tools
      run: |
        sudo apt-get update && sudo apt-get install -y clang binaryen wabt
        rustup target add wasm32-wasi
    - name: Build Moonramp
      run: cargo build --release
    - name: Build Moonramp Programs
      run: |
        cargo build --manifest-path programs/default-sale/Cargo.toml --release --target wasm32-wasi
        WASM_BIN=./programs/default-sale/target/wasm32-wasi/release/moonramp_program_default_sale.wasm
        wasm-opt -Os -o $WASM_BIN $WASM_BIN
        echo "WASM_BIN=$WASM_BIN" >> $GITHUB_ENV
    - name: Prepare Bins
      run: |
        mkdir out
        cp target/release/moonramp out/
        cp target/release/moonramp-keygen out/
        cp target/release/moonramp-migration out/
        cp target/release/moonramp-prgm-harness out/
        cp target/release/moonrampctl out/
        cp $WASM_BIN out/
    - name: Github Release
      run: |
        go install github.com/tcnksm/ghr@latest
        ghr -t ${{secrets.GITHUB_TOKEN}} -u MoonRamp -r moonramp -c ${GITHUB_SHA} -delete ${GITHUB_REF_NAME} out
  cargo-release:
    runs-on: ubuntu-latest
    env:
      CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: Publish Moonramp Crates
      run: |
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-core
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-encryption
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-entity
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-migration
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-wallet
        pushd programs/lunar
        cargo publish --token $CRATES_IO_TOKEN
        popd
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-gateway
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-program
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-sale
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-registry
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-http
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-rpc
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-program-rpc
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-wallet-rpc
        cargo publish --token $CRATES_IO_TOKEN -p moonramp-sale-rpc
        cargo publish --token $CRATES_IO_TOKEN -p moonramp
        pushd programs/default-sale
        cargo publish --token $CRATES_IO_TOKEN
        popd
