version: 2.1
executors:
  build-executor:
    docker:
      - image: cimg/rust:1.62.0
    working_directory: /tmp/moonramp
  github-release-executor:
    docker:
      - image: cimg/go:1.18.4
    working_directory: /tmp/moonramp
jobs:
  test-unit:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: "Format Check"
          command: "cargo fmt --check"
      - run:
          name: "Unit Test"
          command: "cargo test"
  build-dev:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: "Build Development"
          command: "cargo build"
  build-programs-dev:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: "Install Tools"
          command: |
              sudo apt-get update && sudo apt-get install -y clang binaryen wabt
              rustup target add wasm32-wasi
      - run:
          name: "Build Development Program (default-sale)"
          command: |
              cd programs/default-sale
              cargo build --target wasm32-wasi
              WASM_BIN=target/wasm32-wasi/debug/moonramp_program_default_sale.wasm
              wasm-opt -Os -o $WASM_BIN $WASM_BIN
              wasm-validate $WASM_BIN
              WASM_BIN_SIZE=`wc -c $WASM_BIN`
              echo "$WASM_BIN Size: $WASM_BIN_SIZE"
      - run:
          name: "Build Development Program (test-sale)"
          command: |
              cd programs/test-sale
              cargo build --target wasm32-wasi
              WASM_BIN=target/wasm32-wasi/debug/moonramp_program_test_sale.wasm
              wasm-opt -Os -o $WASM_BIN $WASM_BIN
              wasm-validate $WASM_BIN
              WASM_BIN_SIZE=`wc -c $WASM_BIN`
              echo "$WASM_BIN Size: $WASM_BIN_SIZE"
  docker-dev:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Build Docker Dev Image"
          command: "docker build . --build-arg artifact_mode='' --build-arg artifact_path='debug' -t moonramp/moonramp:$CIRCLE_WORKFLOW_JOB_ID"
  build-release:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: "Build Release"
          command: "cargo build --release"
      - persist_to_workspace:
          root: /tmp/moonramp/target/release
          paths:
            - moonramp
            - moonramp-keygen
            - moonramp-migration
            - moonramp-prgm-harness
            - moonrampctl
  build-programs-release:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: "Install Tools"
          command: |
              sudo apt-get update && sudo apt-get install -y clang binaryen wabt
              rustup target add wasm32-wasi
      - run:
          name: "Build Release Program (default-sale)"
          command: |
              cd programs/default-sale
              cargo build --release --target wasm32-wasi
              WASM_BIN=target/wasm32-wasi/release/moonramp_program_default_sale.wasm
              wasm-opt -Oz -o $WASM_BIN $WASM_BIN
              wasm-validate $WASM_BIN
              WASM_BIN_SIZE=`wc -c $WASM_BIN`
              echo "$WASM_BIN Size: $WASM_BIN_SIZE"
      - persist_to_workspace:
          root: /tmp/moonramp/programs/default-sale/target/wasm32-wasi/release
          paths:
            - moonramp_program_default_sale.wasm
  github-release:
    executor: github-release-executor
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/moonramp/out
      - run:
          name: "Github Release"
          command: |
            go install github.com/tcnksm/ghr@latest
            ghr -t ${GITHUB_ACCESS_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} out
  docker-release:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Build Docker Release Image"
          command: "docker build . -t moonramp/moonramp:$CIRCLE_WORKFLOW_JOB_ID"
      - run:
          name: "Tag Docker Release Image"
          command: |
            docker tag moonramp/moonramp:$CIRCLE_WORKFLOW_JOB_ID moonramp/moonramp:$CIRCLE_SHA1
            docker tag moonramp/moonramp:$CIRCLE_WORKFLOW_JOB_ID moonramp/moonramp:$CIRCLE_TAG
      - run:
          name: "Push Docker Release Image"
          command: |
              docker login -u moonramp -p $DOCKER_HUB_ACCESS_TOKEN
              docker push moonramp/moonramp:$CIRCLE_SHA1
              docker push moonramp/moonramp:$CIRCLE_TAG
workflows:
  test-workflow:
    jobs:
      - test-unit
  build-dev-workflow:
    jobs:
      - build-dev:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: /master/
      - build-programs-dev:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: /master/
  docker-dev-workflow:
    jobs:
      - docker-dev:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: /master/
  github-release-workflow:
    jobs:
      - build-release:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - build-programs-release:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - github-release:
          requires:
            - build-release
            - build-programs-release
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          context:
            - github
  docker-release-workflow:
    jobs:
      - docker-release:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          context:
            - dockerhub
